.ir-header,.ir-logo{height:100px}.ir-news-detail,.ir-news-item .ir-container{overflow:hidden}body,html{font-family:PingFangSC-Light,"Hiragino Sans GB","Microsoft YaHei","WenQuanYi Micro Hei",sans-serif}.ir-container{width:1140px;margin-left:auto;margin-right:auto}.ir-logo{float:left}.ir-logo img{width:auto;height:50px;margin-top:25px;vertical-align:bottom}.ir-nav{float:right}.ir-nav-item{display:inline-block;padding:0 17px;line-height:100px;font-size:17px}.ir-nav-item a{letter-spacing:2px;color:#8e8e8e}.ir-footer{line-height:50px;text-align:center;font-size:14px;color:#5b5b5b;background-color:#161616}.ir-header{position:fixed;top:0;left:0;width:100%;background-color:#fff;z-index:100}.ir-banner{position:relative}.ir-overlay,.ir-page-name{position:absolute;width:100%;left:0}.ir-bg{width:100%;height:380px}.ir-overlay{top:0;height:100%;background-color:rgba(0,0,0,.45)}.ir-page-name{bottom:30px;text-align:center;color:#fff}.ir-page-name h1{line-height:70px;font-size:60px;font-family:黑体;letter-spacing:15px}.ir-page-name h2{line-height:50px;font-size:20px;letter-spacing:4px}.ir-news-item{padding:60px 0;font-size:0}.ir-news-item:nth-child(odd){background-color:#f4f4f4}.ir-news-item:nth-child(odd) .ir-news-content,.ir-news-item:nth-child(odd) .ir-news-img{float:left}.ir-news-item:nth-child(odd) .ir-news-img-inner{margin-right:50px}.ir-news-item:nth-child(even){background-color:#fff}.ir-news-item:nth-child(even) .ir-news-content,.ir-news-item:nth-child(even) .ir-news-img{float:right}.ir-news-item:nth-child(even) .ir-news-img-inner{margin-left:50px}.ir-news-content,.ir-news-img{width:50%;vertical-align:top}.ir-news-img-inner img{width:100%;max-height:280px}.ir-news-title{display:block;margin:20px 0 10px;line-height:35px;font-size:25px;color:#333}.ir-news-time{line-height:22px;font-size:13px;color:#707070}.ir-news-detail{margin-top:20px;line-height:28px;max-height:112px;text-align:justify;font-size:14px;color:#444}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NvbXBvbmVudHMvaGVhZGVyLmxlc3MiLCJuZXdzTGlzdC5sZXNzIiwiLi4vY29tcG9uZW50cy92YXJzLmxlc3MiLCIuLi9jb21wb25lbnRzL21peGluLmxlc3MiLCIuLi9jb21wb25lbnRzL2Zvb3Rlci5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLFdBVUEsU0FFRSxPQUFBLE1DaUdGLGdCQTVEQSw0QkFpRUUsU0FBQSxPRHRIRixLQUFNLEtBQ0osWUFBQSxpQkVRNEIsbUJBQW9CLGtCQUFtQixzQkFBQSxXRkRyRSxjQUNFLE1BQUEsT0FDQSxZQUFBLEtBQ0EsYUFBQSxLQUdGLFNBQ0UsTUFBQSxLQURGLGFBSUksTUFBQSxLQUNBLE9BQUEsS0FDQSxXQUFBLEtBQ0EsZUFBQSxPQUlKLFFBQ0UsTUFBQSxNQUdGLGFHNUJFLFFBQUEsYUg4QkEsUUFBQSxFQUFBLEtBQ0EsWUFBQSxNQUNBLFVBQUEsS0FKRixlQU1JLGVBQUEsSUFDQSxNQUFBLFFJcENKLFdBQ0UsWUFBQSxLQUNBLFdBQUEsT0FDQSxVQUFBLEtBQ0EsTUFBQSxRQUNBLGlCQUFBLFFIQ0YsV0FDRSxTQUFBLE1BQ0EsSUFBQSxFQUNBLEtBQUEsRUFDQSxNQUFBLEtBQ0EsaUJBQUEsS0FDQSxRQUFBLElBR0YsV0FDRSxTQUFBLFNBUUYsWUFTQSxjQUNFLFNBQUEsU0FDQSxNQUFBLEtBQ0EsS0FBQSxFQWpCRixPQUNFLE1BQUEsS0FDQSxPQUFBLE1BR0YsWUFHRSxJQUFBLEVBRUEsT0FBQSxLQUNBLGlCQUFBLGdCQUdGLGNBSUUsT0FBQSxLQUNBLFdBQUEsT0FDQSxNQUFBLEtBTkYsaUJBUUksWUFBQSxLQUNBLFVBQUEsS0FDQSxZQUFBLEdBQ0EsZUFBQSxLQVhKLGlCQWNJLFlBQUEsS0FDQSxVQUFBLEtBQ0EsZUFBQSxJQUlKLGNBQ0UsUUFBQSxLQUFBLEVBQ0EsVUFBQSxFQUlBLDZCQUNFLGlCQUFBLFFBREYsOENBQUEsMENBSUksTUFBQSxLQUpKLGdEQU9JLGFBQUEsS0FHSiw4QkFDRSxpQkFBQSxLQURGLCtDQUFBLDJDQUlJLE1BQUEsTUFKSixpREFPSSxZQUFBLEtBTU4saUJBREEsYUFFRSxNQUFBLElBQ0EsZUFBQSxJQUdGLHVCQUVJLE1BQUEsS0FDQSxXQUFBLE1BUUosZUFDRSxRQUFBLE1BQ0EsT0FBQSxLQUFBLEVBQUEsS0FFQSxZQUFBLEtBQ0EsVUFBQSxLQUNBLE1BQUEsS0FHRixjQUNFLFlBQUEsS0FDQSxVQUFBLEtBQ0EsTUFBQSxRQUdGLGdCQUNFLFdBQUEsS0FFQSxZQUFBLEtBQ0EsV0FBQSxNQUVBLFdBQUEsUUFDQSxVQUFBLEtBQ0EsTUFBQSIsImZpbGUiOiJuZXdzTGlzdC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5LCBodG1sIHtcclxuICBmb250LWZhbWlseTogQGZvbnRTdGFjaztcclxufVxyXG5cclxuLmlyLWhlYWRlciB7XHJcbiAgaGVpZ2h0OiBAbmF2SGVpZ2h0O1xyXG59XHJcblxyXG4uaXItY29udGFpbmVyIHtcclxuICB3aWR0aDogQG1haW5XaWR0aDtcclxuICBtYXJnaW4tbGVmdDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi5pci1sb2dvIHtcclxuICBmbG9hdDogbGVmdDtcclxuICBoZWlnaHQ6IEBuYXZIZWlnaHQ7XHJcbiAgaW1nIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiBAbmF2SGVpZ2h0IC0gNTA7XHJcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICB9XHJcbn1cclxuXHJcbi5pci1uYXYge1xyXG4gIGZsb2F0OiByaWdodDtcclxufVxyXG5cclxuLmlyLW5hdi1pdGVtIHtcclxuICAuZGlzcGxheUlubGluZUJsb2NrKCk7XHJcbiAgcGFkZGluZzogMCAxN3B4O1xyXG4gIGxpbmUtaGVpZ2h0OiBAbmF2SGVpZ2h0O1xyXG4gIGZvbnQtc2l6ZTogMTdweDtcclxuICBhIHtcclxuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICBjb2xvcjogIzhlOGU4ZTtcclxuICB9XHJcbn0iLCJAaW1wb3J0IFwiLi4vY29tcG9uZW50cy92YXJzXCI7XHJcbkBpbXBvcnQgXCIuLi9jb21wb25lbnRzL21peGluXCI7XHJcbi8vQGltcG9ydCBcIi4uL2NvbXBvbmVudHMvaWNvblwiO1xyXG5AaW1wb3J0IFwiLi4vY29tcG9uZW50cy9oZWFkZXJcIjtcclxuQGltcG9ydCBcIi4uL2NvbXBvbmVudHMvZm9vdGVyXCI7XHJcblxyXG4uaXItaGVhZGVyIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB6LWluZGV4OiAxMDA7XHJcbn1cclxuXHJcbi5pci1iYW5uZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLmlyLWJnIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDM4MHB4O1xyXG59XHJcblxyXG4uaXItb3ZlcmxheSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgdG9wOiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC40NSk7XHJcbn1cclxuXHJcbi5pci1wYWdlLW5hbWUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBsZWZ0OiAwO1xyXG4gIGJvdHRvbTogMzBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgaDEge1xyXG4gICAgbGluZS1oZWlnaHQ6IDcwcHg7XHJcbiAgICBmb250LXNpemU6IDYwcHg7XHJcbiAgICBmb250LWZhbWlseTog6buR5L2TO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDE1cHg7XHJcbiAgfVxyXG4gIGgyIHtcclxuICAgIGxpbmUtaGVpZ2h0OiA1MHB4O1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDRweDtcclxuICB9XHJcbn1cclxuXHJcbi5pci1uZXdzLWl0ZW0ge1xyXG4gIHBhZGRpbmc6IDYwcHggMDtcclxuICBmb250LXNpemU6IDA7XHJcbiAgLmlyLWNvbnRhaW5lciB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxuICAmOm50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IEBtYWluQmc7XHJcbiAgICAuaXItbmV3cy1pbWcsXHJcbiAgICAuaXItbmV3cy1jb250ZW50IHtcclxuICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB9XHJcbiAgICAuaXItbmV3cy1pbWctaW5uZXJ7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogNTBweDtcclxuICAgIH1cclxuICB9XHJcbiAgJjpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIC5pci1uZXdzLWltZyxcclxuICAgIC5pci1uZXdzLWNvbnRlbnQge1xyXG4gICAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICB9XHJcbiAgICAuaXItbmV3cy1pbWctaW5uZXJ7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmlyLW5ld3MtaW1nLFxyXG4uaXItbmV3cy1jb250ZW50IHtcclxuICB3aWR0aDogNTAlO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbn1cclxuXHJcbi5pci1uZXdzLWltZy1pbm5lciB7XHJcbiAgaW1nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LWhlaWdodDogMjgwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4uaXItbmV3cy1jb250ZW50IHtcclxuXHJcbn1cclxuXHJcbi5pci1uZXdzLXRpdGxlIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW46IDIwcHggMCAxMHB4O1xyXG4gIC8vcGFkZGluZy1yaWdodDogNjBweDtcclxuICBsaW5lLWhlaWdodDogMzVweDtcclxuICBmb250LXNpemU6IDI1cHg7XHJcbiAgY29sb3I6ICMzMzM7XHJcbn1cclxuXHJcbi5pci1uZXdzLXRpbWUge1xyXG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gIGZvbnQtc2l6ZTogMTNweDtcclxuICBjb2xvcjogIzcwNzA3MDtcclxufVxyXG5cclxuLmlyLW5ld3MtZGV0YWlsIHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIC8vcGFkZGluZy1yaWdodDogNTBweDtcclxuICBsaW5lLWhlaWdodDogMjhweDtcclxuICBtYXgtaGVpZ2h0OiAyOCo0cHg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBjb2xvcjogIzQ0NDtcclxufSIsIi8v5bC65a+45Y+Y6YePXHJcbkBuYXZIZWlnaHQ6IDEwMHB4O1xyXG5AbWFpbldpZHRoOiAxMTQwcHg7XHJcbkBndXR0ZXI6IDEwcHg7XHJcblxyXG4vL+minOiJsuWPmOmHj1xyXG5AbWFpbkJnOiAjZjRmNGY0O1xyXG5cclxuLy/lrZfkvZPlj5jph49cclxuQGZvbnRTdGFjazogUGluZ0ZhbmdTQy1MaWdodCwgXCJIaXJhZ2lubyBTYW5zIEdCXCIsIFwiTWljcm9zb2Z0IFlhSGVpXCIsIFwiV2VuUXVhbllpIE1pY3JvIEhlaVwiLCBzYW5zLXNlcmlmO1xyXG5AaWNvbW9vbi1mb250LXBhdGg6IFwiLi4vZm9udHNcIjtcclxuXHJcbkBpY29uLWhvbWU6IFwiXFxlOTAwXCI7XHJcbkBpY29uLXBlbmNpbDogXCJcXGU5MDVcIjtcclxuQGljb24taW1hZ2VzOiBcIlxcZTkwZVwiO1xyXG5AaWNvbi1ib29rczogXCJcXGU5MjBcIjtcclxuQGljb24tZmlsZS10ZXh0MjogXCJcXGU5MjZcIjtcclxuQGljb24tZm9sZGVyLW9wZW46IFwiXFxlOTMwXCI7XHJcbkBpY29uLWNhbGVuZGFyOiBcIlxcZTk1M1wiO1xyXG5AaWNvbi11c2VyOiBcIlxcZTk3MVwiO1xyXG5AaWNvbi11c2VyLXRpZTogXCJcXGU5NzZcIjtcclxuQGljb24tc2VhcmNoOiBcIlxcZTk4NlwiO1xyXG5AaWNvbi13cmVuY2g6IFwiXFxlOTkxXCI7XHJcbkBpY29uLWNvZzogXCJcXGU5OTRcIjtcclxuQGljb24tYmluOiBcIlxcZTlhY1wiO1xyXG5AaWNvbi1tZW51OiBcIlxcZTliZFwiO1xyXG5AaWNvbi1saW5rOiBcIlxcZTljYlwiO1xyXG5AaWNvbi1ib29rbWFya3M6IFwiXFxlOWQzXCI7XHJcbkBpY29uLXBsdXM6IFwiXFxlYTBhXCI7XHJcbkBpY29uLW1pbnVzOiBcIlxcZWEwYlwiO1xyXG5AaWNvbi1jcm9zczogXCJcXGVhMGZcIjtcclxuQGljb24tY2hlY2ttYXJrOiBcIlxcZWExMFwiO1xyXG5AaWNvbi1leGl0OiBcIlxcZWExNFwiO1xyXG5AaWNvbi1wbGF5MzogXCJcXGVhMWNcIjtcclxuQGljb24tYXJyb3ctcmlnaHQyOiBcIlxcZWEzY1wiO1xyXG5AaWNvbi1hcnJvdy1sZWZ0MjogXCJcXGVhNDBcIjtcclxuQGljb24tY3RybDogXCJcXGVhNTBcIjtcclxuQGljb24tZmxpY2tyOiBcIlxcZWFhM1wiOyIsIi5kaXNwbGF5SW5saW5lQmxvY2soKXtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgKmRpc3BsYXk6IGlubGluZTtcclxuICAqem9vbTogMTtcclxufVxyXG5cclxuLmJvcmRlclJhZGl1cyhAc2l6ZSl7XHJcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiBAc2l6ZTtcclxuICAtbW96LWJvcmRlci1yYWRpdXM6IEBzaXplO1xyXG4gIGJvcmRlci1yYWRpdXM6IEBzaXplO1xyXG59XHJcblxyXG4udHJhbnNmb3JtKEB0cmFuc2Zvcm0pe1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBAdHJhbnNmb3JtO1xyXG4gIC1tb3otdHJhbnNmb3JtOiBAdHJhbnNmb3JtO1xyXG4gIC1tcy10cmFuc2Zvcm06IEB0cmFuc2Zvcm07XHJcbiAgLW8tdHJhbnNmb3JtOiBAdHJhbnNmb3JtO1xyXG4gIHRyYW5zZm9ybTogQHRyYW5zZm9ybTtcclxufVxyXG5cclxuLnRyYW5zaXRpb24oQHRyYW5zaXRpb24pe1xyXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogQHRyYW5zaXRpb247XHJcbiAgLW1vei10cmFuc2l0aW9uOiBAdHJhbnNpdGlvbjtcclxuICAtbXMtdHJhbnNpdGlvbjogQHRyYW5zaXRpb247XHJcbiAgLW8tdHJhbnNpdGlvbjogQHRyYW5zaXRpb247XHJcbiAgdHJhbnNpdGlvbjogQHRyYW5zaXRpb247XHJcbn0iLCIuaXItZm9vdGVye1xyXG4gIGxpbmUtaGVpZ2h0OiA1MHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgY29sb3I6ICM1YjViNWI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE2MTYxNjtcclxufSJdfQ== */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
