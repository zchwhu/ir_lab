.ir-header,.ir-logo{height:100px}.ir-nav-item,.ir-user-login{display:inline-block;*zoom:1}.ir-news-detail,.ir-news-item .ir-container{overflow:hidden}body,html{font-family:PingFangSC-Light,"Hiragino Sans GB","Microsoft YaHei","WenQuanYi Micro Hei",sans-serif}.ir-container{width:1140px;margin-left:auto;margin-right:auto}.ir-logo{float:left}.ir-nav,.ir-user{float:right}.ir-logo img{width:auto;height:50px;margin-top:25px;vertical-align:bottom}.ir-nav-item{*display:inline;padding:0 17px;line-height:100px;font-size:17px}.ir-nav-item a{letter-spacing:2px;color:#8e8e8e}.ir-user{line-height:20px;margin-left:20px}.ir-user-login{*display:inline;margin-top:40px;padding-left:20px;color:#8e8e8e;border-left:1px solid #ddd}.ir-user-logged{margin-top:32.5px}.ir-user-logged img{width:35px;height:35px;border-radius:50%}.ir-footer{line-height:50px;text-align:center;font-size:14px;color:#5b5b5b;background-color:#161616}.ir-pagination{text-align:center;font-size:0}.ir-page{display:inline-block;*display:inline;*zoom:1;margin-right:10px}.ir-page a{display:block;padding:5px 10px;line-height:20px;font-size:14px;color:#797979;border:1px solid #ddd;border-radius:3px;transition:all .4s}.ir-page.disabled:hover a{color:#c7c7c7;background-color:#fff}.ir-page.disabled a{color:#c7c7c7;cursor:not-allowed}.ir-page.active a,.ir-page:hover a{color:#fff;background-color:#2979ff}.ir-pagination.hasbg .ir-page a{background-color:#fff}.ir-pagination.hasbg .ir-page.active a,.ir-pagination.hasbg .ir-page:hover a{color:#fff;background-color:#2979ff}.ir-pagination.hasbg .ir-page.disabled:hover a{color:#c7c7c7;background-color:#fff}.ir-pagination.hasbg .ir-page.disabled a{color:#c7c7c7;cursor:not-allowed}.ir-page-count{display:inline-block;*display:inline;*zoom:1;text-align:center;font-size:14px;color:#797979}.ir-header{position:fixed;top:0;left:0;width:100%;background-color:#fff;z-index:100}.ir-banner{position:relative}.ir-overlay,.ir-page-name{position:absolute;width:100%;left:0}.ir-bg{width:100%;height:380px}.ir-overlay{top:0;height:100%;background-color:rgba(0,0,0,.45)}.ir-page-name{bottom:30px;text-align:center;color:#fff}.ir-page-name h1{line-height:70px;font-size:60px;font-family:黑体;letter-spacing:15px}.ir-page-name h2{line-height:50px;font-size:20px;letter-spacing:4px}.ir-news-item{padding:60px 0;font-size:0}.ir-news-item:nth-child(odd){background-color:#f4f4f4}.ir-news-item:nth-child(odd) .ir-news-content,.ir-news-item:nth-child(odd) .ir-news-img{float:left}.ir-news-item:nth-child(odd) .ir-news-img-inner{margin-right:50px}.ir-news-item:nth-child(even){background-color:#fff}.ir-news-item:nth-child(even) .ir-news-content,.ir-news-item:nth-child(even) .ir-news-img{float:right}.ir-news-item:nth-child(even) .ir-news-img-inner{margin-left:50px}.ir-news-content,.ir-news-img{width:50%;vertical-align:top}.ir-news-img-inner img{width:100%;max-height:280px}.ir-news-title{display:block;margin:20px 0 10px;line-height:35px;font-size:25px;color:#333}.ir-news-time{line-height:22px;font-size:13px;color:#707070}.ir-news-detail{margin-top:20px;line-height:28px;max-height:112px;text-align:justify;font-size:14px;color:#444}.ir-pagination-wrapper{margin:20px 0 30px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
