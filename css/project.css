.ir-header,.ir-logo{height:100px}body,html{font-family:PingFangSC-Light,"Hiragino Sans GB","Microsoft YaHei","WenQuanYi Micro Hei",sans-serif}.ir-container{width:1140px;margin-left:auto;margin-right:auto}.ir-logo{float:left}.ir-nav,.ir-user{float:right}.ir-logo img{width:auto;height:50px;margin-top:25px;vertical-align:bottom}.ir-nav-item{display:inline-block;*display:inline;*zoom:1;padding:0 17px;line-height:100px;font-size:17px}.ir-nav-item a{letter-spacing:2px;color:#8e8e8e}.ir-user{line-height:20px;margin-left:20px}.ir-user-login{display:inline-block;*display:inline;*zoom:1;margin-top:40px;padding-left:20px;color:#8e8e8e;border-left:1px solid #ddd}.ir-user-logged{position:relative;z-index:2000;margin-top:32.5px;cursor:pointer}.ir-user-logged img{width:35px;height:35px;border-radius:50%}.ir-dropdown::after,.ir-dropdown::before{content:'';position:absolute;width:0;height:0;border-style:solid}.ir-dropdown{visibility:hidden;opacity:0;position:absolute;top:50px;right:-8px;z-index:3000;min-width:150px;margin-top:-20px;padding:3px 0;background-color:#fff;border-radius:3px;box-shadow:0 4px 8px 0 rgba(7,17,27,.2);transition:all .4s ease-in-out}.ir-dropdown::before{top:-16px;right:17px;z-index:800;border-width:8px;border-color:transparent transparent #f7f7f7}.ir-dropdown::after{top:-12px;right:20px;border-width:6px;border-color:transparent transparent #fff;z-index:1200}.ir-dropdown.show{visibility:visible;opacity:1;margin-top:0}.ir-dropdown-item{margin:0 3px;color:#8f8f8f;transition:all .2s}.ir-dropdown-item:hover{background-color:#2196f3;color:#fff}.ir-dropdown-item a{display:block;padding:8px 25px;font-size:14px;color:inherit}.ir-page,.ir-page-count{display:inline-block;*zoom:1}.ir-footer{line-height:50px;text-align:center;font-size:14px;color:#5b5b5b;background-color:#161616}.ir-banner{position:relative}.ir-overlay,.ir-page-name{position:absolute;left:0;width:100%}.ir-bg{width:100%;height:380px}.ir-overlay{top:0;height:100%;background-color:rgba(0,0,0,.65)}.ir-page-name{bottom:30px;text-align:center;color:#fff}.ir-page-name h1{line-height:70px;font-size:60px;font-family:黑体;letter-spacing:15px}.ir-page-name h2{line-height:50px;font-size:20px;letter-spacing:4px}.ir-pagination{text-align:center;font-size:0}.ir-page{*display:inline;margin-right:10px}.ir-page a{display:block;padding:5px 10px;line-height:20px;font-size:14px;color:#797979;border:1px solid #ddd;border-radius:3px;transition:all .4s}.ir-page.disabled:hover a{color:#c7c7c7;background-color:#fff}.ir-page.disabled a{color:#c7c7c7;cursor:not-allowed}.ir-page.active a,.ir-page:hover a{color:#fff;background-color:#2979ff}.ir-pagination.hasbg .ir-page a{background-color:#fff}.ir-pagination.hasbg .ir-page.active a,.ir-pagination.hasbg .ir-page:hover a{color:#fff;background-color:#2979ff}.ir-pagination.hasbg .ir-page.disabled:hover a{color:#c7c7c7;background-color:#fff}.ir-pagination.hasbg .ir-page.disabled a{color:#c7c7c7;cursor:not-allowed}.ir-page-count{*display:inline;text-align:center;font-size:14px;color:#797979}.ir-header{position:fixed;top:0;left:0;width:100%;background-color:#fff;z-index:100}.ir-projects{padding:60px 0;background-color:#f4f4f4}.ir-projects-list{margin-top:28px;font-size:0}.ir-projects-item{display:inline-block;*display:inline;*zoom:1;width:33.33333333%;margin-bottom:40px}.ir-projects-inner{margin:0 10px;background-color:#fff;border-radius:3px;transition:all .4s ease-in-out 0s}.ir-projects-inner:hover{box-shadow:0 4px 8px 0 rgba(7,17,27,.1)}.ir-projects-inner:hover .ir-projects-headimg img{transform:scale(1.1)}.ir-projects-headimg{position:relative;top:-12px;height:200px;overflow:hidden;margin:0 10px}.ir-projects-headimg img{width:100%;height:100%;transition:all .4s ease-in-out 0s}.ir-projects-intro{margin-top:-10px;padding:15px 25px 25px}.ir-projects-name{display:block;margin-bottom:10px;line-height:30px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:17px;font-weight:700;color:#323232}.ir-projects-intro-inner{height:100px;overflow:hidden;line-height:25px;font-size:14px;color:#8b8b8b}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
