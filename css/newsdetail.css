.ir-header,.ir-logo{height:100px}.ir-nav-item,.ir-news-main{display:inline-block;*zoom:1}.ir-footer,.ir-news-title,.ir-page-name{text-align:center}body,html{font-family:PingFangSC-Light,"Hiragino Sans GB","Microsoft YaHei","WenQuanYi Micro Hei",sans-serif}.ir-container{width:1140px;margin-left:auto;margin-right:auto}.ir-logo{float:left}.ir-logo img{width:auto;height:50px;margin-top:25px;vertical-align:bottom}.ir-nav{float:right}.ir-nav-item{*display:inline;padding:0 17px;line-height:100px;font-size:17px}.ir-nav-item a{letter-spacing:2px;color:#8e8e8e}.ir-footer{line-height:50px;font-size:14px;color:#5b5b5b;background-color:#161616}.ir-header{position:fixed;top:0;left:0;width:100%;background-color:#fff;z-index:100}.ir-banner{position:relative}.ir-overlay,.ir-page-name{position:absolute;width:100%;left:0}.ir-bg{width:100%;height:380px}.ir-overlay{top:0;height:100%;background-color:rgba(0,0,0,.65)}.ir-page-name{bottom:30px;color:#fff}.ir-page-name h1{line-height:70px;font-size:60px;font-family:黑体;letter-spacing:15px}.ir-page-name h2{line-height:50px;font-size:20px;letter-spacing:4px}.ir-news{padding-top:50px;font-size:0;background-color:#f4f4f4}.ir-news-main{*display:inline;width:66.66666667%;vertical-align:top}.ir-news-aside{display:inline-block;*display:inline;*zoom:1;width:33.33333333%;vertical-align:top}.ir-news-inner{margin-right:10px;padding-top:60px;background-color:#fff;box-shadow:0 2px 0 0 #e5e5e5;border-radius:6px}.ir-news-header{margin:0 20px;padding-bottom:30px;border-bottom:1px solid #ddd}.ir-news-title h1{line-height:40px;font-size:28px;letter-spacing:1px;color:#414141}.ir-news-title p{margin-top:8px;margin-bottom:3px;font-size:13px;color:#8f8f8f}.ir-news-title p span{margin-right:20px}.ir-news-content{margin-bottom:50px;padding:35px 60px 50px;line-height:30px;text-align:justify;font-size:14px}.ir-news-content img{display:block;max-width:100%;margin:0 auto}.ir-news-aside-inner{margin-left:15px;line-height:30px}.ir-news-aside-inner h2{font-size:20px;color:#383838}.ir-latest-news-list{margin-top:20px}.ir-latest-news-img{float:left;margin-right:10px}.ir-latest-news-img img{width:70px;height:70px}.ir-latest-news-content{overflow:hidden}.ir-latest-news-item{margin-bottom:10px;padding:5px 5px 25px;border-bottom:1px solid #ddd}.ir-latest-news-title{display:block;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:16px;font-weight:700;color:#f62b0a}.ir-latest-news-time{font-size:13px;color:#8e8e8e}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
