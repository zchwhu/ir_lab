.ir-header,.ir-logo{height:100px}.ir-nav-item,.ir-news-aside,.ir-news-main{display:inline-block}.ir-footer,.ir-news-title,.ir-page-name{text-align:center}body,html{font-family:PingFangSC-Light,"Hiragino Sans GB","Microsoft YaHei","WenQuanYi Micro Hei",sans-serif}.ir-container{width:1140px;margin-left:auto;margin-right:auto}.ir-logo{float:left}.ir-logo img{width:auto;height:50px;margin-top:25px;vertical-align:bottom}.ir-nav{float:right}.ir-nav-item{padding:0 17px;line-height:100px;font-size:17px}.ir-nav-item a{letter-spacing:2px;color:#8e8e8e}.ir-footer{line-height:50px;font-size:14px;color:#5b5b5b;background-color:#161616}.ir-header{position:fixed;top:0;left:0;width:100%;background-color:#fff;z-index:100}.ir-banner{position:relative}.ir-overlay,.ir-page-name{position:absolute;width:100%;left:0}.ir-bg{width:100%;height:380px}.ir-overlay{top:0;height:100%;background-color:rgba(0,0,0,.65)}.ir-page-name{bottom:30px;color:#fff}.ir-page-name h1{line-height:70px;font-size:60px;font-family:黑体;letter-spacing:15px}.ir-page-name h2{line-height:50px;font-size:20px;letter-spacing:4px}.ir-news{padding-top:50px;font-size:0}.ir-news-main{width:66.66666667%}.ir-news-aside{width:33.33333333%}.ir-news-inner{margin-right:10px;padding-top:40px;background-color:#f7f7f7}.ir-news-aside-inner{margin-left:10px}.ir-news-header{margin:0 20px;padding-bottom:30px;border-bottom:1px solid #ddd}.ir-news-title h1{line-height:40px;font-size:28px;letter-spacing:1px;color:#414141}.ir-news-title p{margin-top:8px;margin-bottom:3px;font-size:13px;color:#8f8f8f}.ir-news-title p span{margin-right:20px}.ir-news-content{margin-bottom:50px;padding:35px 60px 50px;line-height:30px;text-align:justify;font-size:14px}.ir-news-content img{display:block;max-width:100%;margin:0 auto}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NvbXBvbmVudHMvaGVhZGVyLmxlc3MiLCJuZXdzZGV0YWlsLmxlc3MiLCIuLi9jb21wb25lbnRzL21peGluLmxlc3MiLCIuLi9jb21wb25lbnRzL2Zvb3Rlci5sZXNzIiwiLi4vY29tcG9uZW50cy92YXJzLmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsV0FVQSxTQUVFLE9BQUEsTUFhRixhQ2dDQSxlQUpBLGNDeERFLFFBQUEsYUNERixXRmlGQSxlQWpEQSxjQWtERSxXQUFBLE9EbEZGLEtBQU0sS0FDSixZQUFBLGlCSVE0QixtQkFBb0Isa0JBQW1CLHNCQUFBLFdKRHJFLGNBQ0UsTUFBQSxPQUNBLFlBQUEsS0FDQSxhQUFBLEtBR0YsU0FDRSxNQUFBLEtBREYsYUFJSSxNQUFBLEtBQ0EsT0FBQSxLQUNBLFdBQUEsS0FDQSxlQUFBLE9BSUosUUFDRSxNQUFBLE1BR0YsYUFFRSxRQUFBLEVBQUEsS0FDQSxZQUFBLE1BQ0EsVUFBQSxLQUpGLGVBTUksZUFBQSxJQUNBLE1BQUEsUUdwQ0osV0FDRSxZQUFBLEtBRUEsVUFBQSxLQUNBLE1BQUEsUUFDQSxpQkFBQSxRRkFGLFdBQ0UsU0FBQSxNQUNBLElBQUEsRUFDQSxLQUFBLEVBQ0EsTUFBQSxLQUNBLGlCQUFBLEtBQ0EsUUFBQSxJQUdGLFdBQ0UsU0FBQSxTQVFGLFlBU0EsY0FDRSxTQUFBLFNBQ0EsTUFBQSxLQUNBLEtBQUEsRUFqQkYsT0FDRSxNQUFBLEtBQ0EsT0FBQSxNQUdGLFlBR0UsSUFBQSxFQUVBLE9BQUEsS0FDQSxpQkFBQSxnQkFHRixjQUlFLE9BQUEsS0FFQSxNQUFBLEtBTkYsaUJBUUksWUFBQSxLQUNBLFVBQUEsS0FDQSxZQUFBLEdBQ0EsZUFBQSxLQVhKLGlCQWNJLFlBQUEsS0FDQSxVQUFBLEtBQ0EsZUFBQSxJQUlKLFNBQ0UsWUFBQSxLQUNBLFVBQUEsRUFHRixjQzNCRSxNQUFBLGFEK0JGLGVDL0JFLE1BQUEsYURtQ0YsZUFDRSxhQUFBLEtBQ0EsWUFBQSxLQUNBLGlCQUFBLFFBR0YscUJBQ0UsWUFBQSxLQUdGLGdCQUNFLE9BQUEsRUFBQSxLQUNBLGVBQUEsS0FDQSxjQUFBLElBQUEsTUFBQSxLQUdGLGtCQUdJLFlBQUEsS0FDQSxVQUFBLEtBQ0EsZUFBQSxJQUNBLE1BQUEsUUFOSixpQkFTSSxXQUFBLElBQ0EsY0FBQSxJQUNBLFVBQUEsS0FDQSxNQUFBLFFBWkosc0JBY00sYUFBQSxLQUtOLGlCQUNFLGNBQUEsS0FDQSxRQUFBLEtBQUEsS0FBQSxLQUNBLFlBQUEsS0FDQSxXQUFBLFFBQ0EsVUFBQSxLQUxGLHFCQU9JLFFBQUEsTUFDQSxVQUFBLEtBQ0EsT0FBQSxFQUFBIiwiZmlsZSI6Im5ld3NkZXRhaWwuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSwgaHRtbCB7XHJcbiAgZm9udC1mYW1pbHk6IEBmb250U3RhY2s7XHJcbn1cclxuXHJcbi5pci1oZWFkZXIge1xyXG4gIGhlaWdodDogQG5hdkhlaWdodDtcclxufVxyXG5cclxuLmlyLWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IEBtYWluV2lkdGg7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4uaXItbG9nbyB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgaGVpZ2h0OiBAbmF2SGVpZ2h0O1xyXG4gIGltZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogQG5hdkhlaWdodCAtIDUwO1xyXG4gICAgbWFyZ2luLXRvcDogMjVweDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XHJcbiAgfVxyXG59XHJcblxyXG4uaXItbmF2IHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbi5pci1uYXYtaXRlbSB7XHJcbiAgLmRpc3BsYXlJbmxpbmVCbG9jaygpO1xyXG4gIHBhZGRpbmc6IDAgMTdweDtcclxuICBsaW5lLWhlaWdodDogQG5hdkhlaWdodDtcclxuICBmb250LXNpemU6IDE3cHg7XHJcbiAgYSB7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xyXG4gICAgY29sb3I6ICM4ZThlOGU7XHJcbiAgfVxyXG59IiwiQGltcG9ydCBcIi4uL2NvbXBvbmVudHMvdmFyc1wiO1xyXG5AaW1wb3J0IFwiLi4vY29tcG9uZW50cy9taXhpblwiO1xyXG5AaW1wb3J0IFwiLi4vY29tcG9uZW50cy9oZWFkZXJcIjtcclxuQGltcG9ydCBcIi4uL2NvbXBvbmVudHMvZm9vdGVyXCI7XHJcblxyXG4uaXItaGVhZGVyIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB6LWluZGV4OiAxMDA7XHJcbn1cclxuXHJcbi5pci1iYW5uZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLmlyLWJnIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDM4MHB4O1xyXG59XHJcblxyXG4uaXItb3ZlcmxheSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgdG9wOiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC42NSk7XHJcbn1cclxuXHJcbi5pci1wYWdlLW5hbWUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBsZWZ0OiAwO1xyXG4gIGJvdHRvbTogMzBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgaDEge1xyXG4gICAgbGluZS1oZWlnaHQ6IDcwcHg7XHJcbiAgICBmb250LXNpemU6IDYwcHg7XHJcbiAgICBmb250LWZhbWlseTog6buR5L2TO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDE1cHg7XHJcbiAgfVxyXG4gIGgyIHtcclxuICAgIGxpbmUtaGVpZ2h0OiA1MHB4O1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDRweDtcclxuICB9XHJcbn1cclxuXHJcbi5pci1uZXdzIHtcclxuICBwYWRkaW5nLXRvcDogNTBweDtcclxuICBmb250LXNpemU6IDA7XHJcbn1cclxuXHJcbi5pci1uZXdzLW1haW4ge1xyXG4gIC5pci1jb2xzKDIsIDMpO1xyXG59XHJcblxyXG4uaXItbmV3cy1hc2lkZSB7XHJcbiAgLmlyLWNvbHMoMSwgMyk7XHJcbn1cclxuXHJcbi5pci1uZXdzLWlubmVye1xyXG4gIG1hcmdpbi1yaWdodDogQGd1dHRlcjtcclxuICBwYWRkaW5nLXRvcDogNDBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xyXG59XHJcblxyXG4uaXItbmV3cy1hc2lkZS1pbm5lcntcclxuICBtYXJnaW4tbGVmdDogQGd1dHRlcjtcclxufVxyXG5cclxuLmlyLW5ld3MtaGVhZGVye1xyXG4gIG1hcmdpbjogMCAyMHB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAzMHB4O1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xyXG59XHJcblxyXG4uaXItbmV3cy10aXRsZXtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgaDF7XHJcbiAgICBsaW5lLWhlaWdodDogNDBweDtcclxuICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgICBjb2xvcjogIzQxNDE0MTtcclxuICB9XHJcbiAgcHtcclxuICAgIG1hcmdpbi10b3A6IDhweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDNweDtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGNvbG9yOiAjOGY4ZjhmO1xyXG4gICAgc3BhbntcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmlyLW5ld3MtY29udGVudHtcclxuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gIHBhZGRpbmc6IDM1cHggNjBweCA1MHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gIHRleHQtYWxpZ246IGp1c3RpZnk7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGltZ3tcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgfVxyXG59IiwiLmRpc3BsYXlJbmxpbmVCbG9jaygpe1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAqZGlzcGxheTogaW5saW5lO1xyXG4gICp6b29tOiAxO1xyXG59XHJcblxyXG4uYm9yZGVyUmFkaXVzKEBzaXplKXtcclxuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IEBzaXplO1xyXG4gIC1tb3otYm9yZGVyLXJhZGl1czogQHNpemU7XHJcbiAgYm9yZGVyLXJhZGl1czogQHNpemU7XHJcbn1cclxuXHJcbi50cmFuc2Zvcm0oQHRyYW5zZm9ybSl7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IEB0cmFuc2Zvcm07XHJcbiAgLW1vei10cmFuc2Zvcm06IEB0cmFuc2Zvcm07XHJcbiAgLW1zLXRyYW5zZm9ybTogQHRyYW5zZm9ybTtcclxuICAtby10cmFuc2Zvcm06IEB0cmFuc2Zvcm07XHJcbiAgdHJhbnNmb3JtOiBAdHJhbnNmb3JtO1xyXG59XHJcblxyXG4udHJhbnNpdGlvbihAdHJhbnNpdGlvbil7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBAdHJhbnNpdGlvbjtcclxuICAtbW96LXRyYW5zaXRpb246IEB0cmFuc2l0aW9uO1xyXG4gIC1tcy10cmFuc2l0aW9uOiBAdHJhbnNpdGlvbjtcclxuICAtby10cmFuc2l0aW9uOiBAdHJhbnNpdGlvbjtcclxuICB0cmFuc2l0aW9uOiBAdHJhbnNpdGlvbjtcclxufVxyXG5cclxuLmlyLWNvbHMoQGNvbHMsQGRpdmlkZXI6MTApe1xyXG4gIC5kaXNwbGF5SW5saW5lQmxvY2soKTtcclxuICB3aWR0aDogMTAwJSAqIEBjb2xzIC8gQGRpdmlkZXI7XHJcbn0iLCIuaXItZm9vdGVye1xyXG4gIGxpbmUtaGVpZ2h0OiA1MHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgY29sb3I6ICM1YjViNWI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE2MTYxNjtcclxufSIsIi8v5bC65a+45Y+Y6YePXHJcbkBuYXZIZWlnaHQ6IDEwMHB4O1xyXG5AbWFpbldpZHRoOiAxMTQwcHg7XHJcbkBndXR0ZXI6IDEwcHg7XHJcblxyXG4vL+minOiJsuWPmOmHj1xyXG5AbWFpbkJnOiAjZjRmNGY0O1xyXG5cclxuLy/lrZfkvZPlj5jph49cclxuQGZvbnRTdGFjazogUGluZ0ZhbmdTQy1MaWdodCwgXCJIaXJhZ2lubyBTYW5zIEdCXCIsIFwiTWljcm9zb2Z0IFlhSGVpXCIsIFwiV2VuUXVhbllpIE1pY3JvIEhlaVwiLCBzYW5zLXNlcmlmO1xyXG5AaWNvbW9vbi1mb250LXBhdGg6IFwiLi4vZm9udHNcIjtcclxuXHJcbkBpY29uLWhvbWU6IFwiXFxlOTAwXCI7XHJcbkBpY29uLXBlbmNpbDogXCJcXGU5MDVcIjtcclxuQGljb24taW1hZ2VzOiBcIlxcZTkwZVwiO1xyXG5AaWNvbi1ib29rczogXCJcXGU5MjBcIjtcclxuQGljb24tZmlsZS10ZXh0MjogXCJcXGU5MjZcIjtcclxuQGljb24tZm9sZGVyLW9wZW46IFwiXFxlOTMwXCI7XHJcbkBpY29uLWNhbGVuZGFyOiBcIlxcZTk1M1wiO1xyXG5AaWNvbi11c2VyOiBcIlxcZTk3MVwiO1xyXG5AaWNvbi11c2VyLXRpZTogXCJcXGU5NzZcIjtcclxuQGljb24tc2VhcmNoOiBcIlxcZTk4NlwiO1xyXG5AaWNvbi13cmVuY2g6IFwiXFxlOTkxXCI7XHJcbkBpY29uLWNvZzogXCJcXGU5OTRcIjtcclxuQGljb24tYmluOiBcIlxcZTlhY1wiO1xyXG5AaWNvbi1tZW51OiBcIlxcZTliZFwiO1xyXG5AaWNvbi1saW5rOiBcIlxcZTljYlwiO1xyXG5AaWNvbi1ib29rbWFya3M6IFwiXFxlOWQzXCI7XHJcbkBpY29uLXBsdXM6IFwiXFxlYTBhXCI7XHJcbkBpY29uLW1pbnVzOiBcIlxcZWEwYlwiO1xyXG5AaWNvbi1jcm9zczogXCJcXGVhMGZcIjtcclxuQGljb24tY2hlY2ttYXJrOiBcIlxcZWExMFwiO1xyXG5AaWNvbi1leGl0OiBcIlxcZWExNFwiO1xyXG5AaWNvbi1wbGF5MzogXCJcXGVhMWNcIjtcclxuQGljb24tYXJyb3ctcmlnaHQyOiBcIlxcZWEzY1wiO1xyXG5AaWNvbi1hcnJvdy1sZWZ0MjogXCJcXGVhNDBcIjtcclxuQGljb24tY3RybDogXCJcXGVhNTBcIjtcclxuQGljb24tZmxpY2tyOiBcIlxcZWFhM1wiOyJdfQ== */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
