.ir-header,.ir-logo{height:100px}.ir-footer,.ir-news-title,.ir-page-name{text-align:center}body,html{font-family:PingFangSC-Light,"Hiragino Sans GB","Microsoft YaHei","WenQuanYi Micro Hei",sans-serif}.ir-container{width:1140px;margin-left:auto;margin-right:auto}.ir-logo{float:left}.ir-logo img{width:auto;height:50px;margin-top:25px;vertical-align:bottom}.ir-nav{float:right}.ir-nav-item{display:inline-block;*display:inline;*zoom:1;padding:0 17px;line-height:100px;font-size:17px}.ir-nav-item a{letter-spacing:2px;color:#8e8e8e}.ir-footer{line-height:50px;font-size:14px;color:#5b5b5b;background-color:#161616}.ir-header{position:fixed;top:0;left:0;width:100%;background-color:#fff;z-index:100}.ir-banner{position:relative}.ir-overlay,.ir-page-name{position:absolute;width:100%;left:0}.ir-bg{width:100%;height:380px}.ir-overlay{top:0;height:100%;background-color:rgba(0,0,0,.65)}.ir-page-name{bottom:30px;color:#fff}.ir-page-name h1{line-height:70px;font-size:60px;font-family:黑体;letter-spacing:15px}.ir-page-name h2{line-height:50px;font-size:20px;letter-spacing:4px}.ir-news{padding-top:50px;font-size:0}.ir-news-header{margin:0 30px;padding-bottom:30px;border-bottom:1px solid #ddd}.ir-news-title h1{line-height:40px;font-size:28px;letter-spacing:1px;color:#414141}.ir-news-title p{margin-top:16px;margin-bottom:3px;font-size:13px;color:#8f8f8f}.ir-news-title p span+span{margin-left:30px}.ir-news-content{margin-bottom:50px;padding:45px 80px 30px;line-height:32px;text-align:justify;font-size:14px}.ir-news-content img{display:block;max-width:100%;margin:0 auto}.ir-latest-news{padding:50px 0;background-color:#f4f4f4}.ir-latest-news h1{line-height:50px;text-align:center;font-size:26px;color:#333;letter-spacing:3px}.ir-latest-news-list{margin-top:20px;font-size:0}.ir-latest-news-item{display:inline-block;*display:inline;*zoom:1;width:50%;vertical-align:top}.ir-latest-news-inner{margin:0 10px 30px}.ir-latest-news-img{float:left;margin-right:20px}.ir-latest-news-img img{width:160px;height:100px}.ir-latest-news-detail{padding-right:15px;overflow:hidden}.ir-latest-news-title{display:block;margin-bottom:5px;line-height:30px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-size:17px;color:#f62b0a}.ir-latest-news-info{font-size:12px;color:#8b8b8b}.ir-latest-news-info span{margin-left:30px}.ir-latest-news-abs{margin-top:8px;height:44px;line-height:22px;font-size:13px;color:#474747}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
